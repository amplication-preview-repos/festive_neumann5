/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  InsuranceReminder as PrismaInsuranceReminder,
  Biker as PrismaBiker,
} from "@prisma/client";

export class InsuranceReminderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InsuranceReminderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.insuranceReminder.count(args);
  }

  async insuranceReminders(
    args: Prisma.InsuranceReminderFindManyArgs
  ): Promise<PrismaInsuranceReminder[]> {
    return this.prisma.insuranceReminder.findMany(args);
  }
  async insuranceReminder(
    args: Prisma.InsuranceReminderFindUniqueArgs
  ): Promise<PrismaInsuranceReminder | null> {
    return this.prisma.insuranceReminder.findUnique(args);
  }
  async createInsuranceReminder(
    args: Prisma.InsuranceReminderCreateArgs
  ): Promise<PrismaInsuranceReminder> {
    return this.prisma.insuranceReminder.create(args);
  }
  async updateInsuranceReminder(
    args: Prisma.InsuranceReminderUpdateArgs
  ): Promise<PrismaInsuranceReminder> {
    return this.prisma.insuranceReminder.update(args);
  }
  async deleteInsuranceReminder(
    args: Prisma.InsuranceReminderDeleteArgs
  ): Promise<PrismaInsuranceReminder> {
    return this.prisma.insuranceReminder.delete(args);
  }

  async findBikers(
    parentId: string,
    args: Prisma.BikerFindManyArgs
  ): Promise<PrismaBiker[]> {
    return this.prisma.insuranceReminder
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .bikers(args);
  }

  async getBiker(parentId: string): Promise<PrismaBiker | null> {
    return this.prisma.insuranceReminder
      .findUnique({
        where: { id: parentId },
      })
      .biker();
  }
}
